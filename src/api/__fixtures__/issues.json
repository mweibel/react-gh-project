[
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/442",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/442/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/442/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/442/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/442",
    "id": 350343413,
    "node_id": "MDU6SXNzdWUzNTAzNDM0MTM=",
    "number": 442,
    "title": "The http request can't be totally parsed",
    "user": {
      "login": "tianchao-haohan",
      "id": 8639363,
      "node_id": "MDQ6VXNlcjg2MzkzNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8639363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tianchao-haohan",
      "html_url": "https://github.com/tianchao-haohan",
      "followers_url": "https://api.github.com/users/tianchao-haohan/followers",
      "following_url": "https://api.github.com/users/tianchao-haohan/following{/other_user}",
      "gists_url": "https://api.github.com/users/tianchao-haohan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tianchao-haohan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tianchao-haohan/subscriptions",
      "organizations_url": "https://api.github.com/users/tianchao-haohan/orgs",
      "repos_url": "https://api.github.com/users/tianchao-haohan/repos",
      "events_url": "https://api.github.com/users/tianchao-haohan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tianchao-haohan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-08-14T09:12:07Z",
    "updated_at": "2018-08-14T09:12:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Here is the request content:\r\n```\r\nPOST /xxxapi/agent/new-index HTTP/1.1\r\nUser-Agent: appVersion=2.4.15,devType=android\r\n: \r\nContent-Length: 26\r\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\r\nHost: test.tomcat.com\r\nConnection: Keep-Alive\r\nAccept-Encoding: gzip,deflate\r\n```\r\n\r\nThe parser finished at the position of 86 ( the end of 'android').\r\nAnd \"CALLBACK_DATA(header_field)\" was not triggered for \"User-Agent\"."
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/440",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/440/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/440/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/440/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/440",
    "id": 343722162,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjAzMjg3Mzgz",
    "number": 440,
    "title": "Ensure host offset & length are initialized - fuzzer found possible leaks",
    "user": {
      "login": "zzo",
      "id": 717850,
      "node_id": "MDQ6VXNlcjcxNzg1MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/717850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzo",
      "html_url": "https://github.com/zzo",
      "followers_url": "https://api.github.com/users/zzo/followers",
      "following_url": "https://api.github.com/users/zzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzo/subscriptions",
      "organizations_url": "https://api.github.com/users/zzo/orgs",
      "repos_url": "https://api.github.com/users/zzo/repos",
      "events_url": "https://api.github.com/users/zzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-07-23T17:19:56Z",
    "updated_at": "2018-07-23T18:53:13Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/440",
      "html_url": "https://github.com/nodejs/http-parser/pull/440",
      "diff_url": "https://github.com/nodejs/http-parser/pull/440.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/440.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/439",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/439/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/439/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/439/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/439",
    "id": 342584667,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyNDQ5MzE3",
    "number": 439,
    "title": "MSVC Error C2220: p hides prev. local declaration",
    "user": {
      "login": "lx-s",
      "id": 411211,
      "node_id": "MDQ6VXNlcjQxMTIxMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/411211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lx-s",
      "html_url": "https://github.com/lx-s",
      "followers_url": "https://api.github.com/users/lx-s/followers",
      "following_url": "https://api.github.com/users/lx-s/following{/other_user}",
      "gists_url": "https://api.github.com/users/lx-s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lx-s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lx-s/subscriptions",
      "organizations_url": "https://api.github.com/users/lx-s/orgs",
      "repos_url": "https://api.github.com/users/lx-s/repos",
      "events_url": "https://api.github.com/users/lx-s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lx-s/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-07-19T05:34:14Z",
    "updated_at": "2018-07-19T05:34:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/439",
      "html_url": "https://github.com/nodejs/http-parser/pull/439",
      "diff_url": "https://github.com/nodejs/http-parser/pull/439.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/439.patch"
    },
    "body": "MSVC build output (with `/W4` and `TreatWarningsAsErrors=Yes`)\r\n```\r\n2>http_parser.c\r\n2>c:\\dev\\...\\http_parser\\http_parser.c(2389,18): error C2220:  warning treated as error - no 'object' file generated\r\n2>c:\\dev\\...\\http_parser\\http_parser.c(2389,18): error C2220:     const char* p;\r\n2>c:\\dev\\...\\http_parser\\http_parser.c(2389,18): error C2220:                  ^\r\n2>c:\\dev\\...\\http_parser\\http_parser.c(2389,18): warning C4456:  declaration of 'p' hides previous local declaration\r\n2>c:\\dev\\...\\http_parser\\http_parser.c(2389,18): warning C4456:     const char* p;\r\n2>c:\\dev\\...\\http_parser\\http_parser.c(2389,18): warning C4456:                  ^\r\n2>c:\\dev\\...\\http_parser\\http_parser.c(2302,15): message :  see declaration of 'p'\r\n2>c:\\dev\\...\\http_parser\\http_parser.c(2302,15): message :   const char *p;\r\n2>c:\\dev\\...\\http_parser\\http_parser.c(2302,15): message :      \r\n```\r\n_(Line numbers don't match with current master since I've noticed the build-error when using 2.8.1)_\r\n\r\nTo fix this build-error I removed `const char* p;`-declaration as it is already declared right at\r\n```c\r\nhttp_parser_parse_url(const char *buf, size_t buflen, int is_connect,\r\n                      struct http_parser_url *u)\r\n{\r\n  enum state s;\r\n  const char *p; // <-----\r\n```\r\nSince the removed `const char* p` within the if-statement is first used in line 2420 `for (p= buf + off` where it gets immediately assigned a new value, the removal should be completely harmless."
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/438",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/438/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/438/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/438/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/438",
    "id": 339184523,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk5OTE4NzQw",
    "number": 438,
    "title": "test: various small fixes",
    "user": {
      "login": "maclover7",
      "id": 3020626,
      "node_id": "MDQ6VXNlcjMwMjA2MjY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3020626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maclover7",
      "html_url": "https://github.com/maclover7",
      "followers_url": "https://api.github.com/users/maclover7/followers",
      "following_url": "https://api.github.com/users/maclover7/following{/other_user}",
      "gists_url": "https://api.github.com/users/maclover7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maclover7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maclover7/subscriptions",
      "organizations_url": "https://api.github.com/users/maclover7/orgs",
      "repos_url": "https://api.github.com/users/maclover7/repos",
      "events_url": "https://api.github.com/users/maclover7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maclover7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-07-08T00:06:14Z",
    "updated_at": "2018-07-20T14:37:06Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/438",
      "html_url": "https://github.com/nodejs/http-parser/pull/438",
      "diff_url": "https://github.com/nodejs/http-parser/pull/438.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/438.patch"
    },
    "body": "Combined a few loops, and removed some extra blank lines"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/437",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/437/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/437/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/437/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/437",
    "id": 337025462,
    "node_id": "MDU6SXNzdWUzMzcwMjU0NjI=",
    "number": 437,
    "title": "oss-fuzz integration",
    "user": {
      "login": "bshastry",
      "id": 2388185,
      "node_id": "MDQ6VXNlcjIzODgxODU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2388185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bshastry",
      "html_url": "https://github.com/bshastry",
      "followers_url": "https://api.github.com/users/bshastry/followers",
      "following_url": "https://api.github.com/users/bshastry/following{/other_user}",
      "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions",
      "organizations_url": "https://api.github.com/users/bshastry/orgs",
      "repos_url": "https://api.github.com/users/bshastry/repos",
      "events_url": "https://api.github.com/users/bshastry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bshastry/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-06-29T14:42:26Z",
    "updated_at": "2018-07-31T09:16:39Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nWould you be interested in enrolling your project into oss-fuzz? I have a pull request waiting to happen but before that I want to check if you are interested and if so, get some feedback on my test harness :smile: \r\n"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/435",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/435/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/435/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/435/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/435",
    "id": 333854990,
    "node_id": "MDU6SXNzdWUzMzM4NTQ5OTA=",
    "number": 435,
    "title": "Consolidate duplicate content-length response headers",
    "user": {
      "login": "derekargueta",
      "id": 5253821,
      "node_id": "MDQ6VXNlcjUyNTM4MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5253821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/derekargueta",
      "html_url": "https://github.com/derekargueta",
      "followers_url": "https://api.github.com/users/derekargueta/followers",
      "following_url": "https://api.github.com/users/derekargueta/following{/other_user}",
      "gists_url": "https://api.github.com/users/derekargueta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/derekargueta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/derekargueta/subscriptions",
      "organizations_url": "https://api.github.com/users/derekargueta/orgs",
      "repos_url": "https://api.github.com/users/derekargueta/repos",
      "events_url": "https://api.github.com/users/derekargueta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/derekargueta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 278279825,
        "node_id": "MDU6TGFiZWwyNzgyNzk4MjU=",
        "url": "https://api.github.com/repos/nodejs/http-parser/labels/semver-major",
        "name": "semver-major",
        "color": "e11d21",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-06-19T22:01:42Z",
    "updated_at": "2018-06-19T22:15:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "While deploying [Envoy](https://github.com/envoyproxy/envoy), which uses this project for parsing HTTP/1.1 messages, we've seen an occasional bug in a web service where the health-check response contains duplicate `content-length` headers, looking like:\r\n```\r\n< HTTP/1.1 200 OK\r\n--\r\n< Content-Length: 0\r\n< Content-Length: 0\r\n<\r\n```\r\n This library considers the duplicate `content-length` headers erroneous ([code](https://github.com/nodejs/http-parser/blob/master/http_parser.c#L1414)), and as a result Envoy fails the health-check and won't route traffic to that host. Per [RFC 7230, Section 3.3.2](https://tools.ietf.org/html/rfc7230#section-3.3.2), if the values of duplicate content-length headers are equivalent, it is acceptable to either reject the message or consolidate the values into a single `content-length` header.\r\n\r\nThis issue is a proposal to implement the latter - if the duplicate content-length headers are found to contain the same value, consolidate them into a single `content-length` header to improve robustness.\r\n\r\n[Envoy issue](https://github.com/envoyproxy/envoy/issues/3648)"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/431",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/431/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/431/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/431/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/431",
    "id": 327818175,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTkxNTIwMDg0",
    "number": 431,
    "title": "Support ICE/1.x for SOURCE requests.",
    "user": {
      "login": "bnoordhuis",
      "id": 275871,
      "node_id": "MDQ6VXNlcjI3NTg3MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/275871?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bnoordhuis",
      "html_url": "https://github.com/bnoordhuis",
      "followers_url": "https://api.github.com/users/bnoordhuis/followers",
      "following_url": "https://api.github.com/users/bnoordhuis/following{/other_user}",
      "gists_url": "https://api.github.com/users/bnoordhuis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bnoordhuis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bnoordhuis/subscriptions",
      "organizations_url": "https://api.github.com/users/bnoordhuis/orgs",
      "repos_url": "https://api.github.com/users/bnoordhuis/repos",
      "events_url": "https://api.github.com/users/bnoordhuis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bnoordhuis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-30T17:03:23Z",
    "updated_at": "2018-06-14T23:21:28Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/431",
      "html_url": "https://github.com/nodejs/http-parser/pull/431",
      "diff_url": "https://github.com/nodejs/http-parser/pull/431.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/431.patch"
    },
    "body": "Normal clients sends \"GET / HTTP/1.0\" but Shoutcast clients send\r\n\"SOURCE / ICE/1.0\".  Accept that as an alternative but only for\r\nSOURCE requests.\r\n\r\nFixes: https://github.com/nodejs/http-parser/issues/410"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/430",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/430/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/430/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/430/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/430",
    "id": 327364107,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTkxMTc5MDM3",
    "number": 430,
    "title": "Chunk extensions callbacks",
    "user": {
      "login": "martin-gabris",
      "id": 39736892,
      "node_id": "MDQ6VXNlcjM5NzM2ODky",
      "avatar_url": "https://avatars1.githubusercontent.com/u/39736892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martin-gabris",
      "html_url": "https://github.com/martin-gabris",
      "followers_url": "https://api.github.com/users/martin-gabris/followers",
      "following_url": "https://api.github.com/users/martin-gabris/following{/other_user}",
      "gists_url": "https://api.github.com/users/martin-gabris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martin-gabris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martin-gabris/subscriptions",
      "organizations_url": "https://api.github.com/users/martin-gabris/orgs",
      "repos_url": "https://api.github.com/users/martin-gabris/repos",
      "events_url": "https://api.github.com/users/martin-gabris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martin-gabris/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 278279825,
        "node_id": "MDU6TGFiZWwyNzgyNzk4MjU=",
        "url": "https://api.github.com/repos/nodejs/http-parser/labels/semver-major",
        "name": "semver-major",
        "color": "e11d21",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-05-29T15:08:29Z",
    "updated_at": "2018-05-30T16:48:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/430",
      "html_url": "https://github.com/nodejs/http-parser/pull/430",
      "diff_url": "https://github.com/nodejs/http-parser/pull/430.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/430.patch"
    },
    "body": "There are already callbacks to get size of chunk and it's body as well as info when chunk was parsed, but I was missing a clean way to get to chunk extension data. Previously, parser just skipped the extension data as long as it started with space or semicolon.\r\n\r\nI also changed tests with non-zero chunk extensions to check whether they were parsed correctly."
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/423",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/423/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/423/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/423/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/423",
    "id": 311027900,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5MjQyMzIy",
    "number": 423,
    "title": "Assign LIBDIR if not already defined",
    "user": {
      "login": "kapouer",
      "id": 131406,
      "node_id": "MDQ6VXNlcjEzMTQwNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/131406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kapouer",
      "html_url": "https://github.com/kapouer",
      "followers_url": "https://api.github.com/users/kapouer/followers",
      "following_url": "https://api.github.com/users/kapouer/following{/other_user}",
      "gists_url": "https://api.github.com/users/kapouer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kapouer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kapouer/subscriptions",
      "organizations_url": "https://api.github.com/users/kapouer/orgs",
      "repos_url": "https://api.github.com/users/kapouer/repos",
      "events_url": "https://api.github.com/users/kapouer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kapouer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-04-03T23:02:36Z",
    "updated_at": "2018-05-30T16:48:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/423",
      "html_url": "https://github.com/nodejs/http-parser/pull/423",
      "diff_url": "https://github.com/nodejs/http-parser/pull/423.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/423.patch"
    },
    "body": "This makes it easier for packagers of multiarch-enabled systems."
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/419",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/419/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/419/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/419/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/419",
    "id": 307947712,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3MDA3MTIx",
    "number": 419,
    "title": "use BINDIR in Makefile",
    "user": {
      "login": "ewwissi",
      "id": 33944819,
      "node_id": "MDQ6VXNlcjMzOTQ0ODE5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/33944819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ewwissi",
      "html_url": "https://github.com/ewwissi",
      "followers_url": "https://api.github.com/users/ewwissi/followers",
      "following_url": "https://api.github.com/users/ewwissi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ewwissi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ewwissi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ewwissi/subscriptions",
      "organizations_url": "https://api.github.com/users/ewwissi/orgs",
      "repos_url": "https://api.github.com/users/ewwissi/repos",
      "events_url": "https://api.github.com/users/ewwissi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ewwissi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-23T09:00:21Z",
    "updated_at": "2018-05-30T16:48:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/419",
      "html_url": "https://github.com/nodejs/http-parser/pull/419",
      "diff_url": "https://github.com/nodejs/http-parser/pull/419.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/419.patch"
    },
    "body": "Change-Id: I0a6a051d26f8bc82e5172c9905ef46b34fa12ed5"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/418",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/418/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/418/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/418/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/418",
    "id": 307932317,
    "node_id": "MDU6SXNzdWUzMDc5MzIzMTc=",
    "number": 418,
    "title": "add BINDIR in Makefile",
    "user": {
      "login": "ewwissi",
      "id": 33944819,
      "node_id": "MDQ6VXNlcjMzOTQ0ODE5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/33944819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ewwissi",
      "html_url": "https://github.com/ewwissi",
      "followers_url": "https://api.github.com/users/ewwissi/followers",
      "following_url": "https://api.github.com/users/ewwissi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ewwissi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ewwissi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ewwissi/subscriptions",
      "organizations_url": "https://api.github.com/users/ewwissi/orgs",
      "repos_url": "https://api.github.com/users/ewwissi/repos",
      "events_url": "https://api.github.com/users/ewwissi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ewwissi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-23T07:54:23Z",
    "updated_at": "2018-03-23T08:56:13Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "the obj and bin files are stored under source code directory,\r\nwould like to add a BINDIR in Makefile,\r\nto support parralle make for different target.\r\n"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/415",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/415/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/415/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/415/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/415",
    "id": 306160480,
    "node_id": "MDU6SXNzdWUzMDYxNjA0ODA=",
    "number": 415,
    "title": "How do you install this package in Ubuntu ",
    "user": {
      "login": "ilanoh",
      "id": 4743669,
      "node_id": "MDQ6VXNlcjQ3NDM2Njk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4743669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ilanoh",
      "html_url": "https://github.com/ilanoh",
      "followers_url": "https://api.github.com/users/ilanoh/followers",
      "following_url": "https://api.github.com/users/ilanoh/following{/other_user}",
      "gists_url": "https://api.github.com/users/ilanoh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ilanoh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ilanoh/subscriptions",
      "organizations_url": "https://api.github.com/users/ilanoh/orgs",
      "repos_url": "https://api.github.com/users/ilanoh/repos",
      "events_url": "https://api.github.com/users/ilanoh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ilanoh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-17T14:25:40Z",
    "updated_at": "2018-03-19T16:14:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "It is not described in your read me, thank you"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/413",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/413/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/413/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/413/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/413",
    "id": 304388258,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0MzgwMzM0",
    "number": 413,
    "title": "Add CMake build",
    "user": {
      "login": "isaachier",
      "id": 2578297,
      "node_id": "MDQ6VXNlcjI1NzgyOTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2578297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isaachier",
      "html_url": "https://github.com/isaachier",
      "followers_url": "https://api.github.com/users/isaachier/followers",
      "following_url": "https://api.github.com/users/isaachier/following{/other_user}",
      "gists_url": "https://api.github.com/users/isaachier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isaachier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isaachier/subscriptions",
      "organizations_url": "https://api.github.com/users/isaachier/orgs",
      "repos_url": "https://api.github.com/users/isaachier/repos",
      "events_url": "https://api.github.com/users/isaachier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isaachier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-12T14:14:06Z",
    "updated_at": "2018-05-30T16:48:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/413",
      "html_url": "https://github.com/nodejs/http-parser/pull/413",
      "diff_url": "https://github.com/nodejs/http-parser/pull/413.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/413.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/411",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/411/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/411/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/411/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/411",
    "id": 296156884,
    "node_id": "MDU6SXNzdWUyOTYxNTY4ODQ=",
    "number": 411,
    "title": "[Idea] Rewriting in LLVM DSL",
    "user": {
      "login": "indutny",
      "id": 238531,
      "node_id": "MDQ6VXNlcjIzODUzMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/238531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/indutny",
      "html_url": "https://github.com/indutny",
      "followers_url": "https://api.github.com/users/indutny/followers",
      "following_url": "https://api.github.com/users/indutny/following{/other_user}",
      "gists_url": "https://api.github.com/users/indutny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/indutny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/indutny/subscriptions",
      "organizations_url": "https://api.github.com/users/indutny/orgs",
      "repos_url": "https://api.github.com/users/indutny/repos",
      "events_url": "https://api.github.com/users/indutny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/indutny/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 21,
    "created_at": "2018-02-11T03:34:58Z",
    "updated_at": "2018-03-27T20:18:54Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "I know it sounds crazy, but bear with me :wink:\r\n\r\nWhat would you think about rewriting whole project using some JavaScript tool to compile a DSL to a LLVM IR?\r\n\r\nI've several reasons for this:\r\n\r\n* Getting rid of huge switch statement that isn't optimized well, and putting separate states into separate procedures with optimized jumps between the states\r\n* Having architecture-specific vector comparisons that are easy to use\r\n\r\nIt doesn't sound to complicated, and may finally make our codebase shine.\r\n\r\ncc @bnoordhuis @mscdex \r\n"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/410",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/410/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/410/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/410/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/410",
    "id": 296154276,
    "node_id": "MDU6SXNzdWUyOTYxNTQyNzY=",
    "number": 410,
    "title": "Supporting mildly-broken clients and/or ICE/1.0",
    "user": {
      "login": "bradisbell",
      "id": 1097509,
      "node_id": "MDQ6VXNlcjEwOTc1MDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1097509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bradisbell",
      "html_url": "https://github.com/bradisbell",
      "followers_url": "https://api.github.com/users/bradisbell/followers",
      "following_url": "https://api.github.com/users/bradisbell/following{/other_user}",
      "gists_url": "https://api.github.com/users/bradisbell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bradisbell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bradisbell/subscriptions",
      "organizations_url": "https://api.github.com/users/bradisbell/orgs",
      "repos_url": "https://api.github.com/users/bradisbell/repos",
      "events_url": "https://api.github.com/users/bradisbell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bradisbell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-02-11T02:43:58Z",
    "updated_at": "2018-05-30T17:04:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Icecast source clients are essentially HTTP/1.0 clients, except that they have one key difference in the request line for requests.  Instead of `HTTP/1.0`, they have `ICE/1.0`.  For example:\r\n\r\n    SOURCE /brad/mp3-256k ICE/1.0\r\n\r\nThe rest of the request and behavior are normal HTTP/1.0.  It would be beneficial to many if we could handle somewhat-broken requests like these, if they are recoverable.  I think there are a few possible paths:\r\n\r\n## Handle ICE/1.0 explicitly\r\n\r\nI think this would involve adding states for `s_req_http_I`, `s_req_http_IC`, `s_req_http_ICE`, and then setting `parser->http_major = 1` and `parser->http_minor = 0`, similar to the way HTTP/0.9 clients work.  https://github.com/nodejs/http-parser/blob/master/http_parser.c#L1085\r\n\r\n## Don't enforce literal 'HTTP' string in request line\r\n\r\nIf the parser were to simply look for the next slash `/` and a version, and if the request line were otherwise well-formed, we could support `ICE/1.0` as well as other mildly-broken clients.\r\n\r\n## Allow an application-level hook for status line parsing or re-writing\r\n\r\nIf the application using the parser could either parse the request line on its own when `\\r\\n` is first hit, or if the application could re-write the line before the parser parses it, these sorts of oddball use cases could be handled.\r\n\r\nAny thoughts on this enhancement?  Thank you."
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/404",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/404/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/404/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/404/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/404",
    "id": 287983823,
    "node_id": "MDU6SXNzdWUyODc5ODM4MjM=",
    "number": 404,
    "title": "Conan package for http-parser",
    "user": {
      "login": "ZaMaZaN4iK",
      "id": 7355383,
      "node_id": "MDQ6VXNlcjczNTUzODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7355383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ZaMaZaN4iK",
      "html_url": "https://github.com/ZaMaZaN4iK",
      "followers_url": "https://api.github.com/users/ZaMaZaN4iK/followers",
      "following_url": "https://api.github.com/users/ZaMaZaN4iK/following{/other_user}",
      "gists_url": "https://api.github.com/users/ZaMaZaN4iK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ZaMaZaN4iK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ZaMaZaN4iK/subscriptions",
      "organizations_url": "https://api.github.com/users/ZaMaZaN4iK/orgs",
      "repos_url": "https://api.github.com/users/ZaMaZaN4iK/repos",
      "events_url": "https://api.github.com/users/ZaMaZaN4iK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ZaMaZaN4iK/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-01-12T01:50:34Z",
    "updated_at": "2018-01-12T01:50:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hello,\r\nDo you know about [Conan](https://github.com/conan-io/conan)?\r\n[Conan](http://docs.conan.io/en/latest/) is modern dependency manager for C++. And will be great if your library will be available via package manager for other developers.\r\n\r\n[Here](https://github.com/bincrafters/conan-templates) you can find example, how you can create package for the library. \r\n\r\nIf you have any questions, just ask :-)"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/403",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/403/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/403/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/403/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/403",
    "id": 287749473,
    "node_id": "MDU6SXNzdWUyODc3NDk0NzM=",
    "number": 403,
    "title": "Test \"CONNECT_WITH_BODY_REQUEST\" maybe worng",
    "user": {
      "login": "samoconnor",
      "id": 8266283,
      "node_id": "MDQ6VXNlcjgyNjYyODM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8266283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samoconnor",
      "html_url": "https://github.com/samoconnor",
      "followers_url": "https://api.github.com/users/samoconnor/followers",
      "following_url": "https://api.github.com/users/samoconnor/following{/other_user}",
      "gists_url": "https://api.github.com/users/samoconnor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samoconnor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samoconnor/subscriptions",
      "organizations_url": "https://api.github.com/users/samoconnor/orgs",
      "repos_url": "https://api.github.com/users/samoconnor/repos",
      "events_url": "https://api.github.com/users/samoconnor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samoconnor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-11T11:15:23Z",
    "updated_at": "2018-01-11T14:57:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "See: https://github.com/nodejs/http-parser/pull/235#issuecomment-356903686\r\n\r\nThe `CONNECT_WITH_BODY_REQUEST` test case input has `Content-Length: 10` and a body `\"blarfcicle\"`, but the test expects [`.body= \"\"`](https://github.com/nodejs/http-parser/blob/master/test.c#L1102) !\r\n\r\n[The RFC says](https://tools.ietf.org/html/rfc7230#section-3.3):\r\n> _The presence of a message body in a request is signaled by a\r\n    Content-Length or Transfer-Encoding header field.  Request message\r\n   framing is independent of method semantics, even if the method does\r\n   not define any use for a message body._\r\n\r\ni.e. A request that says `Content-Length: 10` has a 10-byte body irrespective of the method being `CONNECT`.\r\n\r\nThe `CONNECT` scemantics are defined here: [RFC 7231, 4.3.6](https://tools.ietf.org/html/rfc7231#section-4.3.6). It talks about the client ignoring *responses( with Content-Length in, however, that is not relevant to this test *request* test case.\r\n\r\n>    _A server MUST NOT send any Transfer-Encoding or Content-Length header\r\n   fields in a 2xx (Successful) response to CONNECT.  A client MUST\r\n   ignore any Content-Length or Transfer-Encoding header fields received\r\n   in a successful response to CONNECT._\r\n\r\n[RFC 7231, 4.3.6](https://tools.ietf.org/html/rfc7231#section-4.3.6) goes on to say that a payload on a `CONNECT` request has no defined meaning, but it does not disallow it:\r\n\r\n>  _A payload within a CONNECT request message has no defined semantics;\r\n   sending a payload body on a CONNECT request might cause some existing\r\n   implementations to reject the request._\r\n\r\nSo, this line may be wrong: https://github.com/nodejs/http-parser/pull/235/files#diff-5c62f371bf37583234d2462ad49ce33dR1837"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/401",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/401/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/401/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/401/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/401",
    "id": 282873358,
    "node_id": "MDU6SXNzdWUyODI4NzMzNTg=",
    "number": 401,
    "title": "Need to consider the noBody situation for HEAD method",
    "user": {
      "login": "tianchao-haohan",
      "id": 8639363,
      "node_id": "MDQ6VXNlcjg2MzkzNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8639363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tianchao-haohan",
      "html_url": "https://github.com/tianchao-haohan",
      "followers_url": "https://api.github.com/users/tianchao-haohan/followers",
      "following_url": "https://api.github.com/users/tianchao-haohan/following{/other_user}",
      "gists_url": "https://api.github.com/users/tianchao-haohan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tianchao-haohan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tianchao-haohan/subscriptions",
      "organizations_url": "https://api.github.com/users/tianchao-haohan/orgs",
      "repos_url": "https://api.github.com/users/tianchao-haohan/repos",
      "events_url": "https://api.github.com/users/tianchao-haohan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tianchao-haohan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-12-18T13:08:26Z",
    "updated_at": "2018-08-14T17:21:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Here is the diff code:\r\n```\r\n+++ b/src/3rd_party/http_parser/http_parser.c\r\n@@ -1783,8 +1783,9 @@ reexecute:\r\n\r\n         hasBody = parser->flags & F_CHUNKED ||\r\n           (parser->content_length > 0 && parser->content_length != ULLONG_MAX);\r\n-        if (parser->upgrade && (parser->method == HTTP_CONNECT ||\r\n-                                (parser->flags & F_SKIPBODY) || !hasBody)) {\r\n+        if ((parser->upgrade && (parser->method == HTTP_CONNECT ||\r\n+                                (parser->flags & F_SKIPBODY) || !hasBody))\r\n+                                || parser->method == HTTP_HEAD) {\r\n           /* Exit, the rest of the message is in a different protocol. */\r\n           UPDATE_STATE(NEW_MESSAGE());\r\n           CALLBACK_NOTIFY(message_complete);\r\n```"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/400",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/400/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/400/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/400/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/400",
    "id": 277983473,
    "node_id": "MDU6SXNzdWUyNzc5ODM0NzM=",
    "number": 400,
    "title": "Group related tests into files",
    "user": {
      "login": "maclover7",
      "id": 3020626,
      "node_id": "MDQ6VXNlcjMwMjA2MjY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3020626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maclover7",
      "html_url": "https://github.com/maclover7",
      "followers_url": "https://api.github.com/users/maclover7/followers",
      "following_url": "https://api.github.com/users/maclover7/following{/other_user}",
      "gists_url": "https://api.github.com/users/maclover7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maclover7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maclover7/subscriptions",
      "organizations_url": "https://api.github.com/users/maclover7/orgs",
      "repos_url": "https://api.github.com/users/maclover7/repos",
      "events_url": "https://api.github.com/users/maclover7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maclover7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-30T03:09:21Z",
    "updated_at": "2018-01-09T14:59:50Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "`test.c` is over four thousand lines long and is getting a little hard to parse... any objections to moving some related tests into separate files in a `test/` directory?\r\n\r\n@indutny @bnoordhuis "
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/399",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/399/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/399/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/399/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/399",
    "id": 277618227,
    "node_id": "MDU6SXNzdWUyNzc2MTgyMjc=",
    "number": 399,
    "title": "Convert test suite to TAP output",
    "user": {
      "login": "maclover7",
      "id": 3020626,
      "node_id": "MDQ6VXNlcjMwMjA2MjY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3020626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maclover7",
      "html_url": "https://github.com/maclover7",
      "followers_url": "https://api.github.com/users/maclover7/followers",
      "following_url": "https://api.github.com/users/maclover7/following{/other_user}",
      "gists_url": "https://api.github.com/users/maclover7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maclover7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maclover7/subscriptions",
      "organizations_url": "https://api.github.com/users/maclover7/orgs",
      "repos_url": "https://api.github.com/users/maclover7/repos",
      "events_url": "https://api.github.com/users/maclover7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maclover7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-11-29T03:32:52Z",
    "updated_at": "2017-11-29T03:32:52Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Right now the test suite has a proprietary/unique way of outputting the status of tests. It would be better if it used something like TAP, which is already used by nodejs/node, libuv/libuv, and other projects. I'm going to try and take a look at this, but someone else can give it a shot if they want :)"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/386",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/386/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/386/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/386/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/386",
    "id": 255625697,
    "node_id": "MDU6SXNzdWUyNTU2MjU2OTc=",
    "number": 386,
    "title": "HTTP/0.9 does not have header fields",
    "user": {
      "login": "tatsuhiro-t",
      "id": 404610,
      "node_id": "MDQ6VXNlcjQwNDYxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/404610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tatsuhiro-t",
      "html_url": "https://github.com/tatsuhiro-t",
      "followers_url": "https://api.github.com/users/tatsuhiro-t/followers",
      "following_url": "https://api.github.com/users/tatsuhiro-t/following{/other_user}",
      "gists_url": "https://api.github.com/users/tatsuhiro-t/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tatsuhiro-t/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tatsuhiro-t/subscriptions",
      "organizations_url": "https://api.github.com/users/tatsuhiro-t/orgs",
      "repos_url": "https://api.github.com/users/tatsuhiro-t/repos",
      "events_url": "https://api.github.com/users/tatsuhiro-t/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tatsuhiro-t/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-09-06T14:32:11Z",
    "updated_at": "2017-09-06T14:32:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "According to https://www.w3.org/Protocols/HTTP/AsImplemented.html, HTTP/0.9 does not have header fields, and single CR + LF pair (or just LF) after a request line signals the end of request.\r\nBut current http-parser waits for 2nd CR + LF pair.\r\n\r\nSee how apache works:\r\n\r\n```\r\n$ telnet 127.0.0.1 80\r\nTrying 127.0.0.1...\r\nConnected to 127.0.0.1.\r\nEscape character is '^]'.\r\nGET /\r\n<html><body><h1>It works!</h1>\r\n<p>This is the default web page for this server.</p>\r\n<p>The web server software is running but no content has been added, yet.</p>\r\n</body></html>\r\nConnection closed by foreign host.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/380",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/380/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/380/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/380/events",
    "html_url": "https://github.com/nodejs/http-parser/issues/380",
    "id": 251303394,
    "node_id": "MDU6SXNzdWUyNTEzMDMzOTQ=",
    "number": 380,
    "title": "Makefile is broken for OS X",
    "user": {
      "login": "rnburn",
      "id": 1923871,
      "node_id": "MDQ6VXNlcjE5MjM4NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1923871?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnburn",
      "html_url": "https://github.com/rnburn",
      "followers_url": "https://api.github.com/users/rnburn/followers",
      "following_url": "https://api.github.com/users/rnburn/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnburn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnburn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnburn/subscriptions",
      "organizations_url": "https://api.github.com/users/rnburn/orgs",
      "repos_url": "https://api.github.com/users/rnburn/repos",
      "events_url": "https://api.github.com/users/rnburn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnburn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-18T16:59:24Z",
    "updated_at": "2017-08-18T17:48:21Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "If you try to install on OS X, you'll get this error\r\n```\r\ncc  -I. -DHTTP_PARSER_STRICT=0  -Wall -Wextra -Werror -O3  -fPIC -c http_parser.c -o libhttp_parser.o\r\ncc  -shared -o libhttp_parser.2.7.1.dylib libhttp_parser.o\r\ninstall -D  http_parser.h /usr/local/include/http_parser.h\r\ninstall: illegal option -- D\r\nusage: install [-bCcpSsv] [-B suffix] [-f flags] [-g group] [-m mode]\r\n               [-o owner] file1 file2\r\n       install [-bCcpSsv] [-B suffix] [-f flags] [-g group] [-m mode]\r\n               [-o owner] file1 ... fileN directory\r\n       install -d [-v] [-g group] [-m mode] [-o owner] directory ...\r\nmake: *** [install] Error 64\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/379",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/379/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/379/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/379/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/379",
    "id": 243595266,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMwOTk5NTAy",
    "number": 379,
    "title": "install `package'",
    "user": {
      "login": "nibaozhu",
      "id": 8361063,
      "node_id": "MDQ6VXNlcjgzNjEwNjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8361063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nibaozhu",
      "html_url": "https://github.com/nibaozhu",
      "followers_url": "https://api.github.com/users/nibaozhu/followers",
      "following_url": "https://api.github.com/users/nibaozhu/following{/other_user}",
      "gists_url": "https://api.github.com/users/nibaozhu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nibaozhu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nibaozhu/subscriptions",
      "organizations_url": "https://api.github.com/users/nibaozhu/orgs",
      "repos_url": "https://api.github.com/users/nibaozhu/repos",
      "events_url": "https://api.github.com/users/nibaozhu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nibaozhu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-07-18T04:16:54Z",
    "updated_at": "2017-10-02T10:28:11Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/379",
      "html_url": "https://github.com/nodejs/http-parser/pull/379",
      "diff_url": "https://github.com/nodejs/http-parser/pull/379.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/379.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/378",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/378/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/378/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/378/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/378",
    "id": 242577362,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMwMjgwODU3",
    "number": 378,
    "title": "add .deps and .dirstamp to .gitignore",
    "user": {
      "login": "simsong",
      "id": 1594284,
      "node_id": "MDQ6VXNlcjE1OTQyODQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1594284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simsong",
      "html_url": "https://github.com/simsong",
      "followers_url": "https://api.github.com/users/simsong/followers",
      "following_url": "https://api.github.com/users/simsong/following{/other_user}",
      "gists_url": "https://api.github.com/users/simsong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simsong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simsong/subscriptions",
      "organizations_url": "https://api.github.com/users/simsong/orgs",
      "repos_url": "https://api.github.com/users/simsong/repos",
      "events_url": "https://api.github.com/users/simsong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simsong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-07-13T03:45:39Z",
    "updated_at": "2018-05-30T16:48:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/378",
      "html_url": "https://github.com/nodejs/http-parser/pull/378",
      "diff_url": "https://github.com/nodejs/http-parser/pull/378.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/378.patch"
    },
    "body": "I use http-parser in another project as a submodule. When I run autotools configure, it creates in the http-parser sub directory a directory and a file:\r\n\r\n```\r\n[user@localhost http-parser]$ git status\r\nHEAD detached from 8d9e5db\r\nUntracked files:\r\n  (use \"git add <file>...\" to include in what will be committed)\r\n\r\n\t.deps/\r\n\t.dirstamp\r\n\r\nnothing added to commit but untracked files present (use \"git add\" to track)\r\n[user@localhost http-parser]$\r\n```\r\n\r\nIt would be super-nice to have `git status` **not** warn me about these two files generated by autotools."
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/377",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/377/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/377/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/377/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/377",
    "id": 242538386,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMwMjUzNDc2",
    "number": 377,
    "title": "[WIP] CMake Support",
    "user": {
      "login": "izaid",
      "id": 482179,
      "node_id": "MDQ6VXNlcjQ4MjE3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/482179?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaid",
      "html_url": "https://github.com/izaid",
      "followers_url": "https://api.github.com/users/izaid/followers",
      "following_url": "https://api.github.com/users/izaid/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaid/subscriptions",
      "organizations_url": "https://api.github.com/users/izaid/orgs",
      "repos_url": "https://api.github.com/users/izaid/repos",
      "events_url": "https://api.github.com/users/izaid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaid/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-07-12T22:49:46Z",
    "updated_at": "2018-05-30T16:48:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/377",
      "html_url": "https://github.com/nodejs/http-parser/pull/377",
      "diff_url": "https://github.com/nodejs/http-parser/pull/377.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/377.patch"
    },
    "body": "CMake support has been requested a few times, and there has been at least one PR about it. This is a new attempt at it -- I think it is relatively simple. Happy to build it out more if that is what is needed."
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/374",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/374/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/374/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/374/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/374",
    "id": 239050854,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTI3ODQwOTMw",
    "number": 374,
    "title": "Add basic CMake support",
    "user": {
      "login": "flandr",
      "id": 1644146,
      "node_id": "MDQ6VXNlcjE2NDQxNDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1644146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flandr",
      "html_url": "https://github.com/flandr",
      "followers_url": "https://api.github.com/users/flandr/followers",
      "following_url": "https://api.github.com/users/flandr/following{/other_user}",
      "gists_url": "https://api.github.com/users/flandr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flandr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flandr/subscriptions",
      "organizations_url": "https://api.github.com/users/flandr/orgs",
      "repos_url": "https://api.github.com/users/flandr/repos",
      "events_url": "https://api.github.com/users/flandr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flandr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-06-28T04:38:47Z",
    "updated_at": "2018-05-30T16:48:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/374",
      "html_url": "https://github.com/nodejs/http-parser/pull/374",
      "diff_url": "https://github.com/nodejs/http-parser/pull/374.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/374.patch"
    },
    "body": "Only supports building the main library target (static and dynamic).\r\n\r\nRefs #257"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/369",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/369/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/369/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/369/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/369",
    "id": 233169725,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTIzNzA4MzUz",
    "number": 369,
    "title": "ignore headers transfer_encoding_chunked and content_length to work with http assemblers.",
    "user": {
      "login": "alperakcan",
      "id": 312912,
      "node_id": "MDQ6VXNlcjMxMjkxMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/312912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alperakcan",
      "html_url": "https://github.com/alperakcan",
      "followers_url": "https://api.github.com/users/alperakcan/followers",
      "following_url": "https://api.github.com/users/alperakcan/following{/other_user}",
      "gists_url": "https://api.github.com/users/alperakcan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alperakcan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alperakcan/subscriptions",
      "organizations_url": "https://api.github.com/users/alperakcan/orgs",
      "repos_url": "https://api.github.com/users/alperakcan/repos",
      "events_url": "https://api.github.com/users/alperakcan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alperakcan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-06-02T12:37:59Z",
    "updated_at": "2018-05-30T16:48:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/369",
      "html_url": "https://github.com/nodejs/http-parser/pull/369",
      "diff_url": "https://github.com/nodejs/http-parser/pull/369.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/369.patch"
    },
    "body": "added ignore_header_transfer_encodig_chunked and ignore_header_content_length to settings.\r\n\r\nignore_header_content_length:\r\n  useful if body length and content length does not match. happens with owa servers. or working with pre http assemblers that unzips compressed content without changing content-length.\r\n\r\nignore_header_transfer_encodig_chunked:\r\n  useful when working with pre-http assemblers which assembles chunked content into one http packet without changing transfer-encoding field.\r\n\r\nmay be useful for someone."
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/351",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/351/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/351/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/351/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/351",
    "id": 207458407,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTA2MDYzNDcz",
    "number": 351,
    "title": "Cython bindings -- Interested?",
    "user": {
      "login": "akatrevorjay",
      "id": 1312290,
      "node_id": "MDQ6VXNlcjEzMTIyOTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akatrevorjay",
      "html_url": "https://github.com/akatrevorjay",
      "followers_url": "https://api.github.com/users/akatrevorjay/followers",
      "following_url": "https://api.github.com/users/akatrevorjay/following{/other_user}",
      "gists_url": "https://api.github.com/users/akatrevorjay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akatrevorjay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akatrevorjay/subscriptions",
      "organizations_url": "https://api.github.com/users/akatrevorjay/orgs",
      "repos_url": "https://api.github.com/users/akatrevorjay/repos",
      "events_url": "https://api.github.com/users/akatrevorjay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akatrevorjay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-14T09:18:19Z",
    "updated_at": "2018-05-30T16:48:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/351",
      "html_url": "https://github.com/nodejs/http-parser/pull/351",
      "diff_url": "https://github.com/nodejs/http-parser/pull/351.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/351.patch"
    },
    "body": "Hi, a long time ago I wrote Cython bindings for this. If I clean it up are you interested in merging?\r\n\r\n(notably the build process and add some docs)\r\n\r\nTy,\r\nTrevor"
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/348",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/348/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/348/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/348/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/348",
    "id": 198283228,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTk4MzE1OTU=",
    "number": 348,
    "title": "Unbreak `make install` in BSDs",
    "user": {
      "login": "roman-neuhauser",
      "id": 271107,
      "node_id": "MDQ6VXNlcjI3MTEwNw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/271107?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roman-neuhauser",
      "html_url": "https://github.com/roman-neuhauser",
      "followers_url": "https://api.github.com/users/roman-neuhauser/followers",
      "following_url": "https://api.github.com/users/roman-neuhauser/following{/other_user}",
      "gists_url": "https://api.github.com/users/roman-neuhauser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roman-neuhauser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roman-neuhauser/subscriptions",
      "organizations_url": "https://api.github.com/users/roman-neuhauser/orgs",
      "repos_url": "https://api.github.com/users/roman-neuhauser/repos",
      "events_url": "https://api.github.com/users/roman-neuhauser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roman-neuhauser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-01T21:53:54Z",
    "updated_at": "2018-05-30T16:48:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/348",
      "html_url": "https://github.com/nodejs/http-parser/pull/348",
      "diff_url": "https://github.com/nodejs/http-parser/pull/348.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/348.patch"
    },
    "body": "I've only tested this in freebsd-12.0 where the changes get me from syntax errors in the Makefile to passing `port test` with flying colors."
  },
  {
    "url": "https://api.github.com/repos/nodejs/http-parser/issues/346",
    "repository_url": "https://api.github.com/repos/nodejs/http-parser",
    "labels_url": "https://api.github.com/repos/nodejs/http-parser/issues/346/labels{/name}",
    "comments_url": "https://api.github.com/repos/nodejs/http-parser/issues/346/comments",
    "events_url": "https://api.github.com/repos/nodejs/http-parser/issues/346/events",
    "html_url": "https://github.com/nodejs/http-parser/pull/346",
    "id": 192900891,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTYxMjY1MDk=",
    "number": 346,
    "title": "makefile: Flexible install fixes",
    "user": {
      "login": "AdamMajer",
      "id": 1211498,
      "node_id": "MDQ6VXNlcjEyMTE0OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1211498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AdamMajer",
      "html_url": "https://github.com/AdamMajer",
      "followers_url": "https://api.github.com/users/AdamMajer/followers",
      "following_url": "https://api.github.com/users/AdamMajer/following{/other_user}",
      "gists_url": "https://api.github.com/users/AdamMajer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AdamMajer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AdamMajer/subscriptions",
      "organizations_url": "https://api.github.com/users/AdamMajer/orgs",
      "repos_url": "https://api.github.com/users/AdamMajer/repos",
      "events_url": "https://api.github.com/users/AdamMajer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AdamMajer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-12-01T16:49:15Z",
    "updated_at": "2018-05-30T16:48:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/nodejs/http-parser/pulls/346",
      "html_url": "https://github.com/nodejs/http-parser/pull/346",
      "diff_url": "https://github.com/nodejs/http-parser/pull/346.diff",
      "patch_url": "https://github.com/nodejs/http-parser/pull/346.patch"
    },
    "body": "Fixing three Makefile related things,\r\n\r\n1. LIBDIR should be configurable. INCLUDEDIR as well\r\n2. fix SONAME so it represents actual ABI compatibility\r\n3. symlinks should not have absolute paths\r\n"
  }
]
